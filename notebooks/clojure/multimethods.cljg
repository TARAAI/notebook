;; gorilla-repl.fileformat = 2

;; @@ [meta]
{}

;; @@

;; **
;;; # Clojure MultiMethods
;; **

;; @@ [clj]
(defmulti foo class)
(defmethod foo clojure.lang.Associative [c] :a-collection)
(defmethod foo String [s] :a-string)

;(foo [])
;:a-collection

;(foo (java.util.HashMap.))
;:a-collection

;(foo "bar")
;:a-string
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-unkown"],"#multifn[foo 0x5026f480]"],"~:value","#multifn[foo 0x5026f480]"]
;; <=

;; @@ [clj]
(methods foo)

;; @@
;; =>
;;; ["^ ","~:type","~:list-like","~:open",["~:span",["^ ","~:class","clj-map"],"{"],"~:close",["^3",["^ ","^4","clj-map"],"}"],"~:separator",["^3",", "],"~:items",["~#list",[["^ ","^0","^1","^2",null,"^5",null,"^6",["^3"," "],"^7",["^8",[["^ ","^0","~:html","~:content",["^3",["^ ","^4","clj-class"],"java.lang.String"],"~:value","java.lang.String"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-unkown"],"#function[user/eval63132/fn--63133]"],"^;","#function[user/eval63132/fn--63133]"]]],"^;","[java.lang.String #function[user/eval63132/fn--63133]]"],["^ ","^0","^1","^2",null,"^5",null,"^6",["^3"," "],"^7",["^8",[["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.Associative"],"^;","clojure.lang.Associative"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-unkown"],"#function[user/eval63128/fn--63129]"],"^;","#function[user/eval63128/fn--63129]"]]],"^;","[clojure.lang.Associative #function[user/eval63128/fn--63129]]"]]],"^;","{java.lang.String #function[user/eval63132/fn--63133], clojure.lang.Associative #function[user/eval63128/fn--63129]}"]
;; <=

;; @@ [clj]
(foo "bar")
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-keyword"],":a-string"],"~:value",":a-string"]
;; <=

;; @@ [clj]
(foo [])
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-keyword"],":a-collection"],"~:value",":a-collection"]
;; <=

;; @@ [clj]
(type [])
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-class"],"clojure.lang.PersistentVector"],"~:value","clojure.lang.PersistentVector"]
;; <=

;; @@ [clj]
(foo {})
;; @@
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-keyword"],":a-collection"],"~:value",":a-collection"]
;; <=

;; @@ [clj]
(ancestors clojure.lang.PersistentVector)
;; @@
;; =>
;;; ["^ ","~:type","~:list-like","~:open",["~:span",["^ ","~:class","clj-set"],"#{"],"~:close",["^3",["^ ","^4","clj-set"],"}"],"~:separator",["^3"," "],"~:items",["~#list",[["^ ","^0","~:html","~:content",["^3",["^ ","^4","clj-class"],"java.lang.Runnable"],"~:value","java.lang.Runnable"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.lang.Comparable"],"^;","java.lang.Comparable"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.APersistentVector"],"^;","clojure.lang.APersistentVector"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.Reversible"],"^;","clojure.lang.Reversible"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IReduceInit"],"^;","clojure.lang.IReduceInit"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.Counted"],"^;","clojure.lang.Counted"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IReduce"],"^;","clojure.lang.IReduce"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.ILookup"],"^;","clojure.lang.ILookup"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IPersistentStack"],"^;","clojure.lang.IPersistentStack"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IEditableCollection"],"^;","clojure.lang.IEditableCollection"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.util.List"],"^;","java.util.List"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.Associative"],"^;","clojure.lang.Associative"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IMeta"],"^;","clojure.lang.IMeta"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.Indexed"],"^;","clojure.lang.Indexed"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IHashEq"],"^;","clojure.lang.IHashEq"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.util.concurrent.Callable"],"^;","java.util.concurrent.Callable"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.Sequential"],"^;","clojure.lang.Sequential"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.AFn"],"^;","clojure.lang.AFn"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IObj"],"^;","clojure.lang.IObj"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.Seqable"],"^;","clojure.lang.Seqable"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IKVReduce"],"^;","clojure.lang.IKVReduce"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.util.Collection"],"^;","java.util.Collection"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IPersistentCollection"],"^;","clojure.lang.IPersistentCollection"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.util.RandomAccess"],"^;","java.util.RandomAccess"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IFn"],"^;","clojure.lang.IFn"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.lang.Object"],"^;","java.lang.Object"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.lang.Iterable"],"^;","java.lang.Iterable"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.io.Serializable"],"^;","java.io.Serializable"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"clojure.lang.IPersistentVector"],"^;","clojure.lang.IPersistentVector"]]],"^;","#{java.lang.Runnable java.lang.Comparable clojure.lang.APersistentVector clojure.lang.Reversible clojure.lang.IReduceInit clojure.lang.Counted clojure.lang.IReduce clojure.lang.ILookup clojure.lang.IPersistentStack clojure.lang.IEditableCollection java.util.List clojure.lang.Associative clojure.lang.IMeta clojure.lang.Indexed clojure.lang.IHashEq java.util.concurrent.Callable clojure.lang.Sequential clojure.lang.AFn clojure.lang.IObj clojure.lang.Seqable clojure.lang.IKVReduce java.util.Collection clojure.lang.IPersistentCollection java.util.RandomAccess clojure.lang.IFn java.lang.Object java.lang.Iterable java.io.Serializable clojure.lang.IPersistentVector}"]
;; <=

;; @@ [clj]
(ancestors java.util.HashMap)
;; @@
;; =>
;;; ["^ ","~:type","~:list-like","~:open",["~:span",["^ ","~:class","clj-set"],"#{"],"~:close",["^3",["^ ","^4","clj-set"],"}"],"~:separator",["^3"," "],"~:items",["~#list",[["^ ","^0","~:html","~:content",["^3",["^ ","^4","clj-class"],"java.util.AbstractMap"],"~:value","java.util.AbstractMap"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.lang.Cloneable"],"^;","java.lang.Cloneable"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.util.Map"],"^;","java.util.Map"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.lang.Object"],"^;","java.lang.Object"],["^ ","^0","^9","^:",["^3",["^ ","^4","clj-class"],"java.io.Serializable"],"^;","java.io.Serializable"]]],"^;","#{java.util.AbstractMap java.lang.Cloneable java.util.Map java.lang.Object java.io.Serializable}"]
;; <=

;; @@ [clj]

;; @@
