;; gorilla-repl.fileformat = 2

;; @@ [meta]
{:id :624c4d1b-cccf-4a30-827e-bba8efc8eb9a}

;; @@

;; **
;;; # Clojure MultiMethods
;; **

;; @@ [clj]
(defmulti foo class)
(defmethod foo clojure.lang.Associative [c] :a-collection)
(defmethod foo String [s] :a-string)

;(foo [])
;:a-collection

;(foo (java.util.HashMap.))
;:a-collection

;(foo "bar")
;:a-string
;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:hiccup","~:content",["~:span",["^ ","~:class","clj-var"],"#'render-newline/foo"]],["^ ","^0","^1","^2",["^3",["^ ","^4","clj-unknown"],"#multifn[foo 0x280bfc1c]"]],["^ ","^0","^1","^2",["^3",["^ ","^4","clj-unknown"],"#multifn[foo 0x280bfc1c]"]]]
;; <=

;; @@ [clj]
(methods foo)

;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:list-like","~:content",["^ ","~:class","clj-map","~:open","{","~:close","}","~:separator"," ","~:items",["~#list",[["^ ","^0","~:hiccup","^2",["~:span",["^ ","^3","clj-class"],"java.lang.String"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-unknown"],"#function[render-newline/eval49927/fn--49928]"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.Associative"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-unknown"],"#function[render-newline/eval49923/fn--49924]"]]]],"~:value","{java.lang.String #function[render-newline/eval49927/fn--49928], clojure.lang.Associative #function[render-newline/eval49923/fn--49924]}"]]]
;; <=

;; @@ [clj]
(foo "bar")
;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:hiccup","~:content",["~:span",["^ ","~:class","clj-keyword"],":a-string"]]]
;; <=

;; @@ [clj]
(foo [])
;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:hiccup","~:content",["~:span",["^ ","~:class","clj-keyword"],":a-collection"]]]
;; <=

;; @@ [clj]
(type [])
;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:hiccup","~:content",["~:span",["^ ","~:class","clj-class"],"clojure.lang.PersistentVector"]]]
;; <=

;; @@ [clj]
(foo {})
;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:hiccup","~:content",["~:span",["^ ","~:class","clj-keyword"],":a-collection"]]]
;; <=

;; @@ [clj]
(ancestors clojure.lang.PersistentVector)
;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:list-like","~:content",["^ ","~:class","clj-set","~:open","#{","~:close","}","~:separator"," ","~:items",["~#list",[["^ ","^0","~:hiccup","^2",["~:span",["^ ","^3","clj-class"],"java.util.RandomAccess"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IFn"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IObj"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.util.List"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IReduceInit"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.Seqable"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.lang.Runnable"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IPersistentVector"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.Counted"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.APersistentVector"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.io.Serializable"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.Sequential"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IKVReduce"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.Indexed"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.lang.Comparable"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.Reversible"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.util.concurrent.Callable"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.Associative"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IPersistentStack"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.lang.Iterable"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IMeta"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.AFn"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.util.Collection"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.lang.Object"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IPersistentCollection"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IHashEq"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.ILookup"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IReduce"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"clojure.lang.IEditableCollection"]]]],"~:value","#{java.util.RandomAccess clojure.lang.IFn clojure.lang.IObj java.util.List clojure.lang.IReduceInit clojure.lang.Seqable java.lang.Runnable clojure.lang.IPersistentVector clojure.lang.Counted clojure.lang.APersistentVector java.io.Serializable clojure.lang.Sequential clojure.lang.IKVReduce clojure.lang.Indexed java.lang.Comparable clojure.lang.Reversible java.util.concurrent.Callable clojure.lang.Associative clojure.lang.IPersistentStack java.lang.Iterable clojure.lang.IMeta clojure.lang.AFn java.util.Collection java.lang.Object clojure.lang.IPersistentCollection clojure.lang.IHashEq clojure.lang.ILookup clojure.lang.IReduce clojure.lang.IEditableCollection}"]]]
;; <=

;; @@ [clj]
(ancestors java.util.HashMap)
;; @@
;; ->
;;; 
;; <-
;; =>
;;; [["^ ","~:type","~:list-like","~:content",["^ ","~:class","clj-set","~:open","#{","~:close","}","~:separator"," ","~:items",["~#list",[["^ ","^0","~:hiccup","^2",["~:span",["^ ","^3","clj-class"],"java.util.AbstractMap"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.io.Serializable"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.util.Map"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.lang.Object"]],["^ ","^0","^9","^2",["^:",["^ ","^3","clj-class"],"java.lang.Cloneable"]]]],"~:value","#{java.util.AbstractMap java.io.Serializable java.util.Map java.lang.Object java.lang.Cloneable}"]]]
;; <=

;; @@ [clj]

;; @@
;; ->
;;; 
;; <-
;; =>
;;; []
;; <=
